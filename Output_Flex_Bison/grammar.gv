// Generated by GNU Bison 3.8.2.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <https://www.gnu.org/software/bison/>.

digraph "./Source/grammar.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: • end_point_of_collapse $end\l"]
  0 -> 1 [style=solid label="FUNCTION"]
  0 -> 2 [style=dashed label="end_point_of_collapse"]
  0 -> 3 [style=dashed label="list_of_functions"]
  0 -> 4 [style=dashed label="function"]
  0 -> 5 [style=dashed label="function_declaration"]
  1 [label="State 1\n\l  5 function_declaration: FUNCTION • data_type arguement_list_with_brackets VALUE\l"]
  1 -> 6 [style=solid label="INT"]
  1 -> 7 [style=solid label="FLOAT"]
  1 -> 8 [style=solid label="VOID"]
  1 -> 9 [style=dashed label="data_type"]
  2 [label="State 2\n\l  0 $accept: end_point_of_collapse • $end\l"]
  2 -> 10 [style=solid label="$end"]
  3 [label="State 3\n\l  1 end_point_of_collapse: list_of_functions •\l  2 list_of_functions: list_of_functions • function\l"]
  3 -> 1 [style=solid label="FUNCTION"]
  3 -> 11 [style=dashed label="function"]
  3 -> 5 [style=dashed label="function_declaration"]
  3 -> "3R1" [style=solid]
 "3R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  4 [label="State 4\n\l  3 list_of_functions: function •\l"]
  4 -> "4R3" [style=solid]
 "4R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  5 [label="State 5\n\l  4 function: function_declaration • compound_statement_with_brackets\l"]
  5 -> 12 [style=solid label="'{'"]
  5 -> 13 [style=dashed label="compound_statement_with_brackets"]
  6 [label="State 6\n\l  6 data_type: INT •\l"]
  6 -> "6R6" [style=solid]
 "6R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  7 [label="State 7\n\l  7 data_type: FLOAT •\l"]
  7 -> "7R7" [style=solid]
 "7R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  8 [label="State 8\n\l  8 data_type: VOID •\l"]
  8 -> "8R8" [style=solid]
 "8R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  9 [label="State 9\n\l  5 function_declaration: FUNCTION data_type • arguement_list_with_brackets VALUE\l"]
  9 -> 14 [style=solid label="'('"]
  9 -> 15 [style=dashed label="arguement_list_with_brackets"]
  10 [label="State 10\n\l  0 $accept: end_point_of_collapse $end •\l"]
  10 -> "10R0" [style=solid]
 "10R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  11 [label="State 11\n\l  2 list_of_functions: list_of_functions function •\l"]
  11 -> "11R2" [style=solid]
 "11R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  12 [label="State 12\n\l 16 compound_statement_with_brackets: '{' • statement_with_semicolon\l"]
  12 -> 6 [style=solid label="INT"]
  12 -> 7 [style=solid label="FLOAT"]
  12 -> 8 [style=solid label="VOID"]
  12 -> 16 [style=solid label="VALUE"]
  12 -> 17 [style=solid label="RETURN"]
  12 -> 18 [style=dashed label="data_type"]
  12 -> 19 [style=dashed label="variable_declaration"]
  12 -> 20 [style=dashed label="statement_with_semicolon"]
  12 -> 21 [style=dashed label="multiplicative_statement"]
  12 -> 22 [style=dashed label="additive_statement"]
  12 -> 23 [style=dashed label="assignment_statement"]
  13 [label="State 13\n\l  4 function: function_declaration compound_statement_with_brackets •\l 14 compound_statement_with_brackets: compound_statement_with_brackets • '}'\l 15                                 | compound_statement_with_brackets • statement_with_semicolon\l"]
  13 -> 6 [style=solid label="INT"]
  13 -> 7 [style=solid label="FLOAT"]
  13 -> 8 [style=solid label="VOID"]
  13 -> 16 [style=solid label="VALUE"]
  13 -> 17 [style=solid label="RETURN"]
  13 -> 24 [style=solid label="'}'"]
  13 -> 18 [style=dashed label="data_type"]
  13 -> 19 [style=dashed label="variable_declaration"]
  13 -> 25 [style=dashed label="statement_with_semicolon"]
  13 -> 21 [style=dashed label="multiplicative_statement"]
  13 -> 22 [style=dashed label="additive_statement"]
  13 -> 23 [style=dashed label="assignment_statement"]
  13 -> "13R4" [style=solid]
 "13R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  14 [label="State 14\n\l 11 arguement_list_with_brackets: '(' • variable_declaration\l 12                             | '(' • ')'\l"]
  14 -> 6 [style=solid label="INT"]
  14 -> 7 [style=solid label="FLOAT"]
  14 -> 8 [style=solid label="VOID"]
  14 -> 26 [style=solid label="')'"]
  14 -> 18 [style=dashed label="data_type"]
  14 -> 27 [style=dashed label="variable_declaration"]
  15 [label="State 15\n\l  5 function_declaration: FUNCTION data_type arguement_list_with_brackets • VALUE\l  9 arguement_list_with_brackets: arguement_list_with_brackets • ')'\l 10                             | arguement_list_with_brackets • ',' variable_declaration\l"]
  15 -> 28 [style=solid label="VALUE"]
  15 -> 29 [style=solid label="')'"]
  15 -> 30 [style=solid label="','"]
  16 [label="State 16\n\l 22 multiplicative_statement: VALUE •\l 27 assignment_statement: VALUE • '=' additive_statement\l"]
  16 -> 31 [style=solid label="'='"]
  16 -> "16R22" [style=solid]
 "16R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  17 [label="State 17\n\l 19 statement_with_semicolon: RETURN • ';'\l"]
  17 -> 32 [style=solid label="';'"]
  18 [label="State 18\n\l 13 variable_declaration: data_type • VALUE\l"]
  18 -> 33 [style=solid label="VALUE"]
  19 [label="State 19\n\l 26 assignment_statement: variable_declaration • '=' additive_statement\l"]
  19 -> 34 [style=solid label="'='"]
  20 [label="State 20\n\l 16 compound_statement_with_brackets: '{' statement_with_semicolon •\l"]
  20 -> "20R16" [style=solid]
 "20R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  21 [label="State 21\n\l 20 multiplicative_statement: multiplicative_statement • '*' VALUE\l 21                         | multiplicative_statement • '/' VALUE\l 25 additive_statement: multiplicative_statement •\l"]
  21 -> 35 [style=solid label="'*'"]
  21 -> 36 [style=solid label="'/'"]
  21 -> "21R25" [style=solid]
 "21R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  22 [label="State 22\n\l 18 statement_with_semicolon: additive_statement • ';'\l 23 additive_statement: additive_statement • '+' multiplicative_statement\l 24                   | additive_statement • '-' multiplicative_statement\l"]
  22 -> 37 [style=solid label="'+'"]
  22 -> 38 [style=solid label="'-'"]
  22 -> 39 [style=solid label="';'"]
  23 [label="State 23\n\l 17 statement_with_semicolon: assignment_statement • ';'\l"]
  23 -> 40 [style=solid label="';'"]
  24 [label="State 24\n\l 14 compound_statement_with_brackets: compound_statement_with_brackets '}' •\l"]
  24 -> "24R14" [style=solid]
 "24R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  25 [label="State 25\n\l 15 compound_statement_with_brackets: compound_statement_with_brackets statement_with_semicolon •\l"]
  25 -> "25R15" [style=solid]
 "25R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  26 [label="State 26\n\l 12 arguement_list_with_brackets: '(' ')' •\l"]
  26 -> "26R12" [style=solid]
 "26R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  27 [label="State 27\n\l 11 arguement_list_with_brackets: '(' variable_declaration •\l"]
  27 -> "27R11" [style=solid]
 "27R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  28 [label="State 28\n\l  5 function_declaration: FUNCTION data_type arguement_list_with_brackets VALUE •\l"]
  28 -> "28R5" [style=solid]
 "28R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  29 [label="State 29\n\l  9 arguement_list_with_brackets: arguement_list_with_brackets ')' •\l"]
  29 -> "29R9" [style=solid]
 "29R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  30 [label="State 30\n\l 10 arguement_list_with_brackets: arguement_list_with_brackets ',' • variable_declaration\l"]
  30 -> 6 [style=solid label="INT"]
  30 -> 7 [style=solid label="FLOAT"]
  30 -> 8 [style=solid label="VOID"]
  30 -> 18 [style=dashed label="data_type"]
  30 -> 41 [style=dashed label="variable_declaration"]
  31 [label="State 31\n\l 27 assignment_statement: VALUE '=' • additive_statement\l"]
  31 -> 42 [style=solid label="VALUE"]
  31 -> 21 [style=dashed label="multiplicative_statement"]
  31 -> 43 [style=dashed label="additive_statement"]
  32 [label="State 32\n\l 19 statement_with_semicolon: RETURN ';' •\l"]
  32 -> "32R19" [style=solid]
 "32R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  33 [label="State 33\n\l 13 variable_declaration: data_type VALUE •\l"]
  33 -> "33R13" [style=solid]
 "33R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  34 [label="State 34\n\l 26 assignment_statement: variable_declaration '=' • additive_statement\l"]
  34 -> 42 [style=solid label="VALUE"]
  34 -> 21 [style=dashed label="multiplicative_statement"]
  34 -> 44 [style=dashed label="additive_statement"]
  35 [label="State 35\n\l 20 multiplicative_statement: multiplicative_statement '*' • VALUE\l"]
  35 -> 45 [style=solid label="VALUE"]
  36 [label="State 36\n\l 21 multiplicative_statement: multiplicative_statement '/' • VALUE\l"]
  36 -> 46 [style=solid label="VALUE"]
  37 [label="State 37\n\l 23 additive_statement: additive_statement '+' • multiplicative_statement\l"]
  37 -> 42 [style=solid label="VALUE"]
  37 -> 47 [style=dashed label="multiplicative_statement"]
  38 [label="State 38\n\l 24 additive_statement: additive_statement '-' • multiplicative_statement\l"]
  38 -> 42 [style=solid label="VALUE"]
  38 -> 48 [style=dashed label="multiplicative_statement"]
  39 [label="State 39\n\l 18 statement_with_semicolon: additive_statement ';' •\l"]
  39 -> "39R18" [style=solid]
 "39R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  40 [label="State 40\n\l 17 statement_with_semicolon: assignment_statement ';' •\l"]
  40 -> "40R17" [style=solid]
 "40R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  41 [label="State 41\n\l 10 arguement_list_with_brackets: arguement_list_with_brackets ',' variable_declaration •\l"]
  41 -> "41R10" [style=solid]
 "41R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  42 [label="State 42\n\l 22 multiplicative_statement: VALUE •\l"]
  42 -> "42R22" [style=solid]
 "42R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  43 [label="State 43\n\l 23 additive_statement: additive_statement • '+' multiplicative_statement\l 24                   | additive_statement • '-' multiplicative_statement\l 27 assignment_statement: VALUE '=' additive_statement •\l"]
  43 -> 37 [style=solid label="'+'"]
  43 -> 38 [style=solid label="'-'"]
  43 -> "43R27" [style=solid]
 "43R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  44 [label="State 44\n\l 23 additive_statement: additive_statement • '+' multiplicative_statement\l 24                   | additive_statement • '-' multiplicative_statement\l 26 assignment_statement: variable_declaration '=' additive_statement •\l"]
  44 -> 37 [style=solid label="'+'"]
  44 -> 38 [style=solid label="'-'"]
  44 -> "44R26" [style=solid]
 "44R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  45 [label="State 45\n\l 20 multiplicative_statement: multiplicative_statement '*' VALUE •\l"]
  45 -> "45R20" [style=solid]
 "45R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  46 [label="State 46\n\l 21 multiplicative_statement: multiplicative_statement '/' VALUE •\l"]
  46 -> "46R21" [style=solid]
 "46R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  47 [label="State 47\n\l 20 multiplicative_statement: multiplicative_statement • '*' VALUE\l 21                         | multiplicative_statement • '/' VALUE\l 23 additive_statement: additive_statement '+' multiplicative_statement •\l"]
  47 -> 35 [style=solid label="'*'"]
  47 -> 36 [style=solid label="'/'"]
  47 -> "47R23" [style=solid]
 "47R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  48 [label="State 48\n\l 20 multiplicative_statement: multiplicative_statement • '*' VALUE\l 21                         | multiplicative_statement • '/' VALUE\l 24 additive_statement: additive_statement '-' multiplicative_statement •\l"]
  48 -> 35 [style=solid label="'*'"]
  48 -> 36 [style=solid label="'/'"]
  48 -> "48R24" [style=solid]
 "48R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
}
