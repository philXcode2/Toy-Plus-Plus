Grammar

    0 $accept: end_point_of_collapse $end

    1 end_point_of_collapse: list_of_functions

    2 list_of_functions: list_of_functions function
    3                  | function

    4 function: function_declaration compound_statement_with_brackets

    5 function_declaration: FUNCTION data_type arguement_list_with_brackets VALUE

    6 data_type: INT
    7          | FLOAT
    8          | VOID

    9 arguement_list_with_brackets: arguement_list_with_brackets ')'
   10                             | arguement_list_with_brackets ',' variable_declaration
   11                             | '(' variable_declaration
   12                             | '(' ')'

   13 variable_declaration: data_type VALUE

   14 compound_statement_with_brackets: compound_statement_with_brackets '}'
   15                                 | compound_statement_with_brackets statement_with_semicolon
   16                                 | '{' statement_with_semicolon

   17 statement_with_semicolon: assignment_statement ';'
   18                         | additive_statement ';'
   19                         | RETURN ';'

   20 multiplicative_statement: multiplicative_statement '*' VALUE
   21                         | multiplicative_statement '/' VALUE
   22                         | VALUE

   23 additive_statement: additive_statement '+' multiplicative_statement
   24                   | additive_statement '-' multiplicative_statement
   25                   | multiplicative_statement

   26 assignment_statement: variable_declaration '=' additive_statement
   27                     | VALUE '=' additive_statement


Terminals, with rules where they appear

    $end (0) 0
    '(' <node> (40) 11 12
    ')' <node> (41) 9 12
    '*' <node> (42) 20
    '+' <node> (43) 23
    ',' <node> (44) 10
    '-' <node> (45) 24
    '/' <node> (47) 21
    ';' <node> (59) 17 18 19
    '=' <node> (61) 26 27
    '{' <node> (123) 16
    '}' <node> (125) 14
    error (256)
    INT <node> (258) 6
    FLOAT <node> (259) 7
    FUNCTION <node> (260) 5
    VOID <node> (261) 8
    VALUE <node> (262) 5 13 20 21 22 27
    RETURN <node> (263) 19


Nonterminals, with rules where they appear

    $accept (20)
        on left: 0
    end_point_of_collapse <node> (21)
        on left: 1
        on right: 0
    list_of_functions <node> (22)
        on left: 2 3
        on right: 1 2
    function <node> (23)
        on left: 4
        on right: 2 3
    function_declaration <node> (24)
        on left: 5
        on right: 4
    data_type <node> (25)
        on left: 6 7 8
        on right: 5 13
    arguement_list_with_brackets <node> (26)
        on left: 9 10 11 12
        on right: 5 9 10
    variable_declaration <node> (27)
        on left: 13
        on right: 10 11 26
    compound_statement_with_brackets <node> (28)
        on left: 14 15 16
        on right: 4 14 15
    statement_with_semicolon <node> (29)
        on left: 17 18 19
        on right: 15 16
    multiplicative_statement <node> (30)
        on left: 20 21 22
        on right: 20 21 23 24 25
    additive_statement <node> (31)
        on left: 23 24 25
        on right: 18 23 24 26 27
    assignment_statement <node> (32)
        on left: 26 27
        on right: 17


State 0

    0 $accept: • end_point_of_collapse $end

    FUNCTION  shift, and go to state 1

    end_point_of_collapse  go to state 2
    list_of_functions      go to state 3
    function               go to state 4
    function_declaration   go to state 5


State 1

    5 function_declaration: FUNCTION • data_type arguement_list_with_brackets VALUE

    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    VOID   shift, and go to state 8

    data_type  go to state 9


State 2

    0 $accept: end_point_of_collapse • $end

    $end  shift, and go to state 10


State 3

    1 end_point_of_collapse: list_of_functions •
    2 list_of_functions: list_of_functions • function

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (end_point_of_collapse)

    function              go to state 11
    function_declaration  go to state 5


State 4

    3 list_of_functions: function •

    $default  reduce using rule 3 (list_of_functions)


State 5

    4 function: function_declaration • compound_statement_with_brackets

    '{'  shift, and go to state 12

    compound_statement_with_brackets  go to state 13


State 6

    6 data_type: INT •

    $default  reduce using rule 6 (data_type)


State 7

    7 data_type: FLOAT •

    $default  reduce using rule 7 (data_type)


State 8

    8 data_type: VOID •

    $default  reduce using rule 8 (data_type)


State 9

    5 function_declaration: FUNCTION data_type • arguement_list_with_brackets VALUE

    '('  shift, and go to state 14

    arguement_list_with_brackets  go to state 15


State 10

    0 $accept: end_point_of_collapse $end •

    $default  accept


State 11

    2 list_of_functions: list_of_functions function •

    $default  reduce using rule 2 (list_of_functions)


State 12

   16 compound_statement_with_brackets: '{' • statement_with_semicolon

    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    VOID    shift, and go to state 8
    VALUE   shift, and go to state 16
    RETURN  shift, and go to state 17

    data_type                 go to state 18
    variable_declaration      go to state 19
    statement_with_semicolon  go to state 20
    multiplicative_statement  go to state 21
    additive_statement        go to state 22
    assignment_statement      go to state 23


State 13

    4 function: function_declaration compound_statement_with_brackets •
   14 compound_statement_with_brackets: compound_statement_with_brackets • '}'
   15                                 | compound_statement_with_brackets • statement_with_semicolon

    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    VOID    shift, and go to state 8
    VALUE   shift, and go to state 16
    RETURN  shift, and go to state 17
    '}'     shift, and go to state 24

    $default  reduce using rule 4 (function)

    data_type                 go to state 18
    variable_declaration      go to state 19
    statement_with_semicolon  go to state 25
    multiplicative_statement  go to state 21
    additive_statement        go to state 22
    assignment_statement      go to state 23


State 14

   11 arguement_list_with_brackets: '(' • variable_declaration
   12                             | '(' • ')'

    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    VOID   shift, and go to state 8
    ')'    shift, and go to state 26

    data_type             go to state 18
    variable_declaration  go to state 27


State 15

    5 function_declaration: FUNCTION data_type arguement_list_with_brackets • VALUE
    9 arguement_list_with_brackets: arguement_list_with_brackets • ')'
   10                             | arguement_list_with_brackets • ',' variable_declaration

    VALUE  shift, and go to state 28
    ')'    shift, and go to state 29
    ','    shift, and go to state 30


State 16

   22 multiplicative_statement: VALUE •
   27 assignment_statement: VALUE • '=' additive_statement

    '='  shift, and go to state 31

    $default  reduce using rule 22 (multiplicative_statement)


State 17

   19 statement_with_semicolon: RETURN • ';'

    ';'  shift, and go to state 32


State 18

   13 variable_declaration: data_type • VALUE

    VALUE  shift, and go to state 33


State 19

   26 assignment_statement: variable_declaration • '=' additive_statement

    '='  shift, and go to state 34


State 20

   16 compound_statement_with_brackets: '{' statement_with_semicolon •

    $default  reduce using rule 16 (compound_statement_with_brackets)


State 21

   20 multiplicative_statement: multiplicative_statement • '*' VALUE
   21                         | multiplicative_statement • '/' VALUE
   25 additive_statement: multiplicative_statement •

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 25 (additive_statement)


State 22

   18 statement_with_semicolon: additive_statement • ';'
   23 additive_statement: additive_statement • '+' multiplicative_statement
   24                   | additive_statement • '-' multiplicative_statement

    '+'  shift, and go to state 37
    '-'  shift, and go to state 38
    ';'  shift, and go to state 39


State 23

   17 statement_with_semicolon: assignment_statement • ';'

    ';'  shift, and go to state 40


State 24

   14 compound_statement_with_brackets: compound_statement_with_brackets '}' •

    $default  reduce using rule 14 (compound_statement_with_brackets)


State 25

   15 compound_statement_with_brackets: compound_statement_with_brackets statement_with_semicolon •

    $default  reduce using rule 15 (compound_statement_with_brackets)


State 26

   12 arguement_list_with_brackets: '(' ')' •

    $default  reduce using rule 12 (arguement_list_with_brackets)


State 27

   11 arguement_list_with_brackets: '(' variable_declaration •

    $default  reduce using rule 11 (arguement_list_with_brackets)


State 28

    5 function_declaration: FUNCTION data_type arguement_list_with_brackets VALUE •

    $default  reduce using rule 5 (function_declaration)


State 29

    9 arguement_list_with_brackets: arguement_list_with_brackets ')' •

    $default  reduce using rule 9 (arguement_list_with_brackets)


State 30

   10 arguement_list_with_brackets: arguement_list_with_brackets ',' • variable_declaration

    INT    shift, and go to state 6
    FLOAT  shift, and go to state 7
    VOID   shift, and go to state 8

    data_type             go to state 18
    variable_declaration  go to state 41


State 31

   27 assignment_statement: VALUE '=' • additive_statement

    VALUE  shift, and go to state 42

    multiplicative_statement  go to state 21
    additive_statement        go to state 43


State 32

   19 statement_with_semicolon: RETURN ';' •

    $default  reduce using rule 19 (statement_with_semicolon)


State 33

   13 variable_declaration: data_type VALUE •

    $default  reduce using rule 13 (variable_declaration)


State 34

   26 assignment_statement: variable_declaration '=' • additive_statement

    VALUE  shift, and go to state 42

    multiplicative_statement  go to state 21
    additive_statement        go to state 44


State 35

   20 multiplicative_statement: multiplicative_statement '*' • VALUE

    VALUE  shift, and go to state 45


State 36

   21 multiplicative_statement: multiplicative_statement '/' • VALUE

    VALUE  shift, and go to state 46


State 37

   23 additive_statement: additive_statement '+' • multiplicative_statement

    VALUE  shift, and go to state 42

    multiplicative_statement  go to state 47


State 38

   24 additive_statement: additive_statement '-' • multiplicative_statement

    VALUE  shift, and go to state 42

    multiplicative_statement  go to state 48


State 39

   18 statement_with_semicolon: additive_statement ';' •

    $default  reduce using rule 18 (statement_with_semicolon)


State 40

   17 statement_with_semicolon: assignment_statement ';' •

    $default  reduce using rule 17 (statement_with_semicolon)


State 41

   10 arguement_list_with_brackets: arguement_list_with_brackets ',' variable_declaration •

    $default  reduce using rule 10 (arguement_list_with_brackets)


State 42

   22 multiplicative_statement: VALUE •

    $default  reduce using rule 22 (multiplicative_statement)


State 43

   23 additive_statement: additive_statement • '+' multiplicative_statement
   24                   | additive_statement • '-' multiplicative_statement
   27 assignment_statement: VALUE '=' additive_statement •

    '+'  shift, and go to state 37
    '-'  shift, and go to state 38

    $default  reduce using rule 27 (assignment_statement)


State 44

   23 additive_statement: additive_statement • '+' multiplicative_statement
   24                   | additive_statement • '-' multiplicative_statement
   26 assignment_statement: variable_declaration '=' additive_statement •

    '+'  shift, and go to state 37
    '-'  shift, and go to state 38

    $default  reduce using rule 26 (assignment_statement)


State 45

   20 multiplicative_statement: multiplicative_statement '*' VALUE •

    $default  reduce using rule 20 (multiplicative_statement)


State 46

   21 multiplicative_statement: multiplicative_statement '/' VALUE •

    $default  reduce using rule 21 (multiplicative_statement)


State 47

   20 multiplicative_statement: multiplicative_statement • '*' VALUE
   21                         | multiplicative_statement • '/' VALUE
   23 additive_statement: additive_statement '+' multiplicative_statement •

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 23 (additive_statement)


State 48

   20 multiplicative_statement: multiplicative_statement • '*' VALUE
   21                         | multiplicative_statement • '/' VALUE
   24 additive_statement: additive_statement '-' multiplicative_statement •

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 24 (additive_statement)
